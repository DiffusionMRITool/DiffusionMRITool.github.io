MeshFromSHCoefficients
======================

.. code-block:: none

  
  USAGE: 
  
     MeshFromSHCoefficients  [--returnparameterfile <std::string>]
                             [--processinformationaddress <std::string>]
                             [--xml] [--echo] [--debug] [-p] [--st]
                             [--nolighting] [--nonormal] [--zoom <double>]
                             [--png <std::string>] [--bg
                             <std::vector<double>>] [--angle
                             <std::vector<double>>] [--size
                             <std::vector<int>>] [--colorscheme <DIRECTION
                             |MAGNITUDE>] [--basicshape <TETRAHEDRON
                             |OCTAHEDRON|ICOSAHEDRON>] [--tessorder <int>]
                             [--scale <double>] [--slice <std::vector<int>>]
                             [--box <std::vector<int>>] [--flip
                             <std::vector<int>>] [--pow <double>]
                             [--nostretch] [--normalize <NONE|MIN_MAX
                             |UNIT_MAX|UNIT_INTEGRAL>] [--removenegative]
                             [--maxorder <int>] [--zonal] [-o <std::string>]
                             [--] [--version] [-h] <std::string>
  
  
  Where: 
  
     --returnparameterfile <std::string>
       Filename in which to write simple return parameters (int, float,
       int-vector, etc.) as opposed to bulk return parameters (image,
       geometry, transform, measurement, table).
  
     --processinformationaddress <std::string>
       Address of a structure to store process information (progress, abort,
       etc.). (value: 0)
  
     --xml
       Produce xml description of command line arguments (value: 0)
  
     --echo
       Echo the command line arguments (value: 0)
  
     --debug
       debug (value: 0)
  
     -p,  --progress
       show progress of processing (value: 0)
  
     --st
       Use single thread. (value: 0)
  
     --nolighting
       Set LightingOff. (value: 0)
  
     --nonormal
       Do not use vtkPolyDataNormals. (value: 0)
  
     --zoom <double>
       zoom factor. Used when visualzing the vtk file.
  
     --png <std::string>
       output png file. Used when visualzing the vtk file.
  
     --bg <std::vector<double>>
       background color for the window (value: 0,0,0)
  
     --angle <std::vector<double>>
       azimuth,elevation. Used when visualzing the vtk file. (value: 0.0,0.0)
  
     --size <std::vector<int>>
       window size. Used when visualzing the vtk file. (value: 600,600)
  
     --colorscheme <DIRECTION|MAGNITUDE>
       Color scheme. (value: DIRECTION)
  
     --basicshape <TETRAHEDRON|OCTAHEDRON|ICOSAHEDRON>
       Basic shape for subdivision. (value: ICOSAHEDRON)
  
     --tessorder <int>
       Tessellation order. (value: 4)
  
     --scale <double>
       Scale factor. (value: 1)
  
     --slice <std::vector<int>>
       coordinates for coronal, sagittal and transverse views. When -1 is
       used for x/y/z, then the voxel is visible in the x/y/z-axis. (value:
       -1,-1,-1)
  
     --box <std::vector<int>>
       only generate mesh from a given box (x0,x1,y0,y1,z0,z1). When -1 is
       used, then x0/y0/z0 will be 0, x1/y1/z1 will be the maximal number in
       the x/y/z-axis. (value: -1,-1,-1,-1,-1,-1)
  
     --flip <std::vector<int>>
       Flip x/y/z-axis for spherical functions. 1 means flip, 0 means
       no-flip. (value: 0,0,0)
  
     --pow <double>
       Power factor. (value: 1)
  
     --nostretch
       If it is set, the mesh in each voxel is a sphere and the values of the
       spherical function are only for coloring. (value: 0)
  
     --normalize <NONE|MIN_MAX|UNIT_MAX|UNIT_INTEGRAL>
       Perform normalization after removing negative values (if set); NONE:
       No normalization; MIN_MAX: Min-max normalization; UNIT_MAX: Unit
       maximum; UNIT_INTEGRATION: Unit integration. (value: NONE)
  
     --removenegative
       Remove negative values if set. (value: 0)
  
     --maxorder <int>
       Maximum order of spherical harmonic basis functions. If it is not set,
       it is calculated from the input SH image. If it is set as a smaller
       value than the order calculated from input image, then only truncated
       orders are used to generate mesh. (value: 0)
  
     --zonal
       SH coefficients only contains even, m=0 terms, i.e., zonal SH. It is
       used for SH coefficients of a response function. (value: 0)
  
     -o <std::string>,  --output <std::string>
       Output vtk file. If it is not set, visualize the vtk file. (value: "")
  
     --,  --ignore_rest
       Ignores the rest of the labeled arguments following this flag.
  
     --version
       Displays version information and exits.
  
     -h,  --help
       Displays usage information and exits.
  
     <std::string>
       (required)  Input file. It is 1) an image file with SH coefficients;
       2) or a .txt file with SH coefficients of a single spheriacl
       function.
  
  
     Description: Create a mesh from spherical harmonics coefficients for
     visualization.
  
     Examples: 
  
     MeshFromSHCoefficients eap_r0.015.nii.gz -o eap_r0.015_vis.vtk
     --tessorder 4 --scale 1e-5 
  
     MeshFromSHCoefficients eap_r0.015.nii.gz --tessorder 4 --scale 1e-5 
  
     MeshFromSHCoefficients eap_r0.015.nii.gz --tessorder 4 --scale 1e-5
     --png out.png 
  
     MeshFromSHCoefficients odf.nii.gz -o odf_vis.vtk --tessorder 4 --scale
     1.5 
  
     MeshFromSHCoefficients odf.nii.gz -o odf_vis.vtk --tessorder 4 --scale
     1.5 --slice -1,-1,25 
  
     MeshFromSHCoefficients odf.nii.gz -o odf_vis.vtk --tessorder 4 --scale
     1.5 --box 20,40,20,40,25,25 
  
     MeshFromSHCoefficients sh.txt --nonormal --colorscheme MAGNITUDE 
  
     MeshFromSHCoefficients sh.txt --nonormal --colorscheme MAGNITUDE
     --nostretch 
  
     MeshFromSHCoefficients sh_zonal.txt --zonal --nonormal --colorscheme
     MAGNITUDE
  
     Author(s): Pew-Thian Yap (ptyap@med.unc.edu), Jian Cheng
     (jian.cheng.1983@gmail.com)
  
     Acknowledgements: Thank you everyone.
  
  