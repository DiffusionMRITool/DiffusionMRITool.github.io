DWISimulator
============

.. code-block:: none

  
  USAGE: 
  
     DWISimulator  [--returnparameterfile <std::string>]
                   [--processinformationaddress <std::string>] [--xml]
                   [--echo] [--debug] [--outputdwitype <4D|4DALL|EACHSHELL>]
                   [--tau <float>] [--snr <float>] [--noisesigma <float>]
                   [--bgdiffusionparams <std::vector<double>>]
                   [--cylinderparams <std::vector<double>>] [--rvalues
                   <std::vector<double>>] [--rfile <std::string>]
                   [--rorientations <std::string>] [--bvalues
                   <std::vector<double>>] [--bfile <std::string>]
                   [--qorientations <std::string>] [--outb0 <std::string>]
                   [--peaks <int>] [--peaktype <XYZV|XYZ|NXYZV|NXYZ>]
                   [--outmsd <std::string>] [--outrto <std::string>]
                   [--outpeak <std::string>] [--outeap <std::string>]
                   [--outodf <std::string>] [--outdwi <std::string>] [--]
                   [--version] [-h] <std::string>
  
  
  Where: 
  
     --returnparameterfile <std::string>
       Filename in which to write simple return parameters (int, float,
       int-vector, etc.) as opposed to bulk return parameters (image,
       geometry, transform, measurement, table).
  
     --processinformationaddress <std::string>
       Address of a structure to store process information (progress, abort,
       etc.). (value: 0)
  
     --xml
       Produce xml description of command line arguments (value: 0)
  
     --echo
       Echo the command line arguments (value: 0)
  
     --debug
       debug (value: 0)
  
     --outputdwitype <4D|4DALL|EACHSHELL>
       Output DWI type. 4D: only 4D dwi image. 4DALL: one 4D dwi image (with
       all b values), gradient file and b values in a txt file. EACHSHELL:
       several 4D DWI images (with different b values), gradient file and b
       values in a txt file (value: 4DALL)
  
     --tau <float>
       Used for calculating q values from b values. The default value is set
       so that 4*pi^2*tau=1. (value: 0.0253303)
  
     --snr <float>
       Signal-to-Noise Ratio (overrides parameter file value). Conflicts with
       --noisesigma. (value: 0)
  
     --noisesigma <float>
       Noise level (overrides parameter file value). Conflicts with --snr.
       (value: 0)
  
     --bgdiffusionparams <std::vector<double>>
       Background diffusion parameters; override parameters in parameter file
  
     --cylinderparams <std::vector<double>>
       Parameters in clinder model. (Length,radius,diffusivity) (value: 5.0
       ,0.005,2.02e-3)
  
     --rvalues <std::vector<double>>
       R values for different shells. Each shell uses the same orientations
       specified with --rgradients. Conflicts with --rfile.
  
     --rfile <std::string>
       Text file that contains the R values. The number of entries should be
       consistent with the orientations specified with --rgradients.
  
     --rorientations <std::string>
       Text file that contains the orientations for sampling in the R-space.
  
     --bvalues <std::vector<double>>
       B values for different shells. Each shell uses the same orientations
       specified with --qgradients. Conflicts with --bfile.
  
     --bfile <std::string>
       Text file that contains the B values. The number of entries should be
       consistent with the orientations specified with --qgradient. Conflicts
       with --bvalues.
  
     --qorientations <std::string>
       Text file that contains the gradient orientations of the data.
  
     --outb0 <std::string>
       Output B0 image.
  
     --peaks <int>
       Maximal number of peaks for output peak file. (value: 4)
  
     --peaktype <XYZV|XYZ|NXYZV|NXYZ>
       Peak Type. XYZV: peak direction vector (x,y,z) + peak magnitude v;
       XYZ: peak direction vector; NXYZV: number of peaks + peak direction
       vectors + peak magnitudes; NXYZ: number of peaks + peak direction
       vectors. (value: XYZV)
  
     --outmsd <std::string>
       Scalar image that will contain the mean squared displacement (MSD)
       probability map.
  
     --outrto <std::string>
       Scalar image that will contain the return-to-origin (RTO) probability
       map.
  
     --outpeak <std::string>
       Vector image that will contain the ground truch of peaks.
  
     --outeap <std::string>
       Vector image that will contain the EAP field.
  
     --outodf <std::string>
       Vector image that will contain the ODF field.
  
     --outdwi <std::string>
       Vector image that will contain the DWI field.
  
     --,  --ignore_rest
       Ignores the rest of the labeled arguments following this flag.
  
     --version
       Displays version information and exits.
  
     -h,  --help
       Displays usage information and exits.
  
     <std::string>
       (required)  Text file that contains the diffusion parameters.
  
  
     Description: Simulate DWI data.
  
     Examples: 
  
     DWISimulator dwi_config.txt --outdwi dwi.nii.gz --outodf odfTrue.nii.gz
     --outeap eapTrue_r0.015.nii.gz  --qorientations Elec060.txt --bvalues
     1000,2000,3000 --rorientations directions_t4.txt --rvalues 0.015
     --noisesigma 0.0 --outb0 dwi_diagonal_b0.nii.gz --outputdwitype
     EACHSHELL
  
     Author(s): Pew-Thian Yap (ptyap@med.unc.edu), Jian Cheng
     (jian.cheng.1983@gmail.com)
  
     Acknowledgements: Thank you everyone.
  
  