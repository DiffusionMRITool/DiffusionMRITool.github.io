SamplingSchemeQSpaceRandomEstimation
====================================

.. code-block:: none

  
  USAGE: 
  
     SamplingSchemeQSpaceRandomEstimation  [--returnparameterfile
                                          <std::string>]
                                          [--processinformationaddress
                                          <std::string>] [--xml] [--echo]
                                          [--numberOfSamples
                                          <std::vector<int>>] [--]
                                          [--version] [-h] <std::string>
  
  
  Where: 
  
     --returnparameterfile <std::string>
       Filename in which to write simple return parameters (int, float,
       int-vector, etc.) as opposed to bulk return parameters (image,
       geometry, transform, measurement, table).
  
     --processinformationaddress <std::string>
       Address of a structure to store process information (progress, abort,
       etc.). (value: 0)
  
     --xml
       Produce xml description of command line arguments (value: 0)
  
     --echo
       Echo the command line arguments (value: 0)
  
     --numberOfSamples <std::vector<int>>
       number of samples in single/multiple shells.
  
     --,  --ignore_rest
       Ignores the rest of the labeled arguments following this flag.
  
     --version
       Displays version information and exits.
  
     -h,  --help
       Displays usage information and exits.
  
     <std::string>
       (required)  Output orientation file(s), single shell or multiple
       shells.
  
  
     Description: Random generator for multi-shell schemes.
  
     Examples: 
  
     SamplingSchemeQSpaceRandomEstimation grad.txt --numberOfSamples 60 
  
     SamplingSchemeQSpaceRandomEstimation grad.txt --numberOfSamples 28,28,28
     
  
     Reference: 
  
     Jian Cheng, Dinggang Shen, Pew-Thian Yap, Peter J. Basser, 'Single- and
     Multiple-Shell Uniform Sampling Schemes for Diffusion MRI Using
     Spherical Codes', IEEE Transactions on Medical Imaging (TMI),
     2017.
  
     Author(s): Jian Cheng (jian.cheng.1983@gmail.com)
  
     Acknowledgements: Thank you everyone.
  
  